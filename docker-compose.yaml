version: '3.6'
services:
  wallet:
    container_name: '${STAGE}-${APP_NAME}-wallet'
    build: ./wallet
    ports:
      - '8888:8888'
    volumes:
      - type: volume
        source: dbdata
        target: /opt/application/data
        volume:
          nocopy: true
  postgres:
    container_name: '${STAGE}-${APP_NAME}-postgres'
    image: postgres:11.5-alpine
    ports:
      - '5432:5432'
    volumes:
      - type: volume
        source: dbdata
        target: /var/lib/postgresql/data
        volume:
          nocopy: true
    environment:
      POSTGRES_USER: '${POSTGRES_USER}'
      POSTGRES_PASSWORD: '${POSTGRES_PASSWORD}'
      POSTGRES_DB: '${POSTGRES_DB}'
  hapi:
    container_name: '${STAGE}-${APP_NAME}-hapi'
    image: node:14.2.0
    ports:
      - '9090:9090'
    volumes:
      - type: bind
        source: ./hapi
        target: /app
      - type: volume
        source: nodemodules
        target: /app/node_modules
        volume:
          nocopy: true
    working_dir: /app
    command: bash -c "yarn && yarn watch"
    environment:
      HAPI_EOS_API_ENDPOINT: '${HAPI_EOS_API_ENDPOINT}'
      HAPI_EOS_API_CHAIN_ID: '${HAPI_EOS_API_CHAIN_ID}'
      HAPI_EOS_BASE_ACCOUNT: '${HAPI_EOS_BASE_ACCOUNT}'
      HAPI_EOS_BASE_ACCOUNT_PASSWORD: '${HAPI_EOS_BASE_ACCOUNT_PASSWORD}'
      HAPI_EOS_MECHANICS_ACCOUNT: '${HAPI_EOS_MECHANICS_ACCOUNT}'
      HAPI_EOS_MECHANICS_PASSWORD: '${HAPI_EOS_MECHANICS_PASSWORD}'
      HAPI_EOS_WALLET_URL: '${HAPI_EOS_WALLET_URL}'
      HAPI_EOS_BP_JSON_ON_CHAIN: '${HAPI_EOS_BP_JSON_ON_CHAIN}'
      HAPI_EOS_BP_JSON_ON_CHAIN_CONTRACT: '${HAPI_EOS_BP_JSON_ON_CHAIN_CONTRACT}'
      HAPI_EOS_BP_JSON_ON_CHAIN_TABLE: '${HAPI_EOS_BP_JSON_ON_CHAIN_TABLE}'
      HAPI_EOS_BP_JSON_ON_CHAIN_SCOPE: '${HAPI_EOS_BP_JSON_ON_CHAIN_SCOPE}'
      HAPI_HASURA_URL: '${HAPI_HASURA_URL}'
      HAPI_HASURA_ADMIN_SECRET: '${HAPI_HASURA_ADMIN_SECRET}'
      HAPI_SERVER_PORT: '${HAPI_SERVER_PORT}'
      HAPI_SERVER_ADDRESS: '${HAPI_SERVER_ADDRESS}'
      HAPI_SYNC_PRODUCERS_INTERVAL: '${HAPI_SYNC_PRODUCERS_INTERVAL}'
      HAPI_SYNC_PRODUCER_INFO_INTERVAL: '${HAPI_SYNC_PRODUCER_INFO_INTERVAL}'
      HAPI_SYNC_PRODUCER_CPU_INTERVAL: '${HAPI_SYNC_PRODUCER_CPU_INTERVAL}'
  hasura:
    container_name: '${STAGE}-${APP_NAME}-hasura'
    image: hasura/graphql-engine:v1.3.1.cli-migrations-v2
    ports:
      - '8080:8080'
    volumes:
      - ./hasura/migrations:/hasura-migrations
      - ./hasura/metadata:/hasura-metadata
    environment:
      HASURA_GRAPHQL_DATABASE_URL: '${HASURA_GRAPHQL_DATABASE_URL}'
      HASURA_GRAPHQL_ENABLE_CONSOLE: '${HASURA_GRAPHQL_ENABLE_CONSOLE}'
      HASURA_GRAPHQL_ADMIN_SECRET: '${HASURA_GRAPHQL_ADMIN_SECRET}'
      HASURA_GRAPHQL_UNAUTHORIZED_ROLE: '${HASURA_GRAPHQL_UNAUTHORIZED_ROLE}'
  webapp:
    container_name: '${STAGE}-${APP_NAME}-webapp'
    image: node:14.2.0
    stdin_open: true
    ports:
      - '3000:3000'
    volumes:
      - type: bind
        source: ./webapp
        target: /app
      - type: volume
        source: nodemodules
        target: /app/node_modules
        volume:
          nocopy: true
    working_dir: /app
    command: bash -c "yarn && yarn start"
    environment:
      REACT_APP_TITLE: '${REACT_APP_TITLE}'
      REACT_APP_DEFAULT_PRODUCER_LOGO: '${REACT_APP_DEFAULT_PRODUCER_LOGO}'
      react_app_eos_rate_link: '${REACT_APP_EOS_RATE_LINK}'
      REACT_APP_EOS_RATE_LINK: '${REACT_APP_USE_REWARDS}'
      REACT_APP_USE_VOTES: '${REACT_APP_USE_VOTES}'
      REACT_APP_USE_BLOCK_PRODUCER_AGREEMENT_CONTRACT: '${REACT_APP_USE_BLOCK_PRODUCER_AGREEMENT_CONTRACT}'
      REACT_APP_HASURA_URL: '${REACT_APP_HASURA_URL}'
      REACT_APP_EOS_API_HOST: '${REACT_APP_EOS_API_HOST}'
      REACT_APP_EOS_API_PORT: '${REACT_APP_EOS_API_PORT}'
      REACT_APP_EOS_API_PROTOCOL: '${REACT_APP_EOS_API_PROTOCOL}'
      REACT_APP_EOS_CHAIN_ID: '${REACT_APP_EOS_CHAIN_ID}'
      REACT_APP_EOS_DEFAULT_EXCHANGE_RATE: '${REACT_APP_EOS_DEFAULT_EXCHANGE_RATE}'
      REACT_APP_EOS_DEFAULT_EXCHANGE_RATE_API: '${REACT_APP_EOS_DEFAULT_EXCHANGE_RATE_API}'
      REACT_APP_EOS_USE_BP_JSON_ON_CHAIN: '${REACT_APP_EOS_USE_BP_JSON_ON_CHAIN}'
      REACT_APP_EOS_BP_JSON_ON_CHAIN_CONTRACT: '${REACT_APP_EOS_BP_JSON_ON_CHAIN_CONTRACT}'
      REACT_APP_EOS_BP_JSON_ON_CHAIN_TABLE: '${REACT_APP_EOS_BP_JSON_ON_CHAIN_TABLE}'
      REACT_APP_EOS_BP_JSON_ON_CHAIN_SCOPE: '${REACT_APP_EOS_BP_JSON_ON_CHAIN_SCOPE}'
      REACT_APP_EOS_CUSTOM_NODE_TYPES: '${REACT_APP_EOS_CUSTOM_NODE_TYPES}'
volumes:
  nodemodules:
  dbdata:
  walletdata: